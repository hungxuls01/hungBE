using _1.DataAccessLayer.Store;
using _2.DataTransferObject;
using _4.Utils;
using Newtonsoft.Json;
using NLog;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using System.Web.Http.Cors;

namespace ApiTng.Controllers
{
    [EnableCors(origins: "*", headers: "*", methods: "*")]
    public class StoreController : ApiController
    {
        private static IStoreDal _StoreDal;
        private static Logger _logger;

        public StoreController()
        {
            _StoreDal = new StoreDal();
            _logger = LogManager.GetCurrentClassLogger();
        }

        #region Authorize

        /// <summary>
        /// select store by paging
        /// </summary>
        /// <param name="obj"></param>
        /// <param name="pageIndex"></param>
        /// <param name="pageSize"></param>
        /// <returns></returns>
        [Authorize(Roles = "FE1B570B-22F1-42E8-847E-A177B931BC57")]
        [HttpPost]
        public ResponeResult GetPaging(StoreSearchDto obj)
        {
            var response = new ResponeResult(ConstUtil.Error, "Có lỗi xảy ra!", null);
            try
            {
                var result = _StoreDal.SelectPaging(obj, obj.PageIndex, obj.PageSize);
                var data = new DataTableBase<StoreList>(result.Item2, result.Item1, obj.PageIndex + 1).Init();
                response.Status = ConstUtil.Success;
                response.Message = "Thành công !";
                response.Data = data;
                return response;
            }
            catch (Exception ex)
            {
                _logger.Error(ex.Message);
                response.Status = ConstUtil.Error;
                response.Message = ex.ToString();
                return response;
            }
        }

        /// <summary>
        /// Select store by Id
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        [Authorize(Roles = "FE1B570B-22F1-42E8-847E-A177B931BC57")]
        [HttpPost]
        public ResponeResult GetById(StoreGetbyId obj)
        {
            var response = new ResponeResult(ConstUtil.Error, "Có lỗi xảy ra!", null);
            try
            {
                var data = _StoreDal.GetById(obj);
                if (data != null)
                {
                    response.Status = ConstUtil.Success;
                    response.Message = "Thành công !";
                    response.Data = data;
                    return response;
                }
                
                response.Status = ConstUtil.Error;
                response.Message = "Không tìm thấy dữ liệu!";
                return response;
            }
            catch (Exception ex)
            {
                _logger.Error(ex.Message);
                response.Status = ConstUtil.Error;
                response.Message = ex.ToString();
                return response;
            }
        }

        /// <summary>
        /// select store by id to display
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        [Authorize(Roles = "FE1B570B-22F1-42E8-847E-A177B931BC57")]
        [HttpPost]
        public ResponeResult View(StoreGetbyId obj)
        {
            var response = new ResponeResult(ConstUtil.Error, "Có lỗi xảy ra!", null);
            try
            {
                var data = _StoreDal.View(obj);
                if (data.Item2 == 1)
                {
                    response.Status = ConstUtil.Success;
                    response.Message = "Thành công !";
                    response.Data = data.Item1;
                    return response;
                }
                if (data.Item2 == 0)
                {
                    response.Status = ConstUtil.Incompetent;
                    response.Message = "Bạn không có quyền!";
                    return response;
                }
                response.Status = ConstUtil.Error;
                response.Message = "Không tìm thấy dữ liệu!";
                return response;
            }
            catch (Exception ex)
            {
                _logger.Error(ex.Message);
                response.Status = ConstUtil.Error;
                response.Message = ex.ToString();
                return response;
            }
        }

        /// <summary>
        /// Insert or update store
        /// </summary>
        /// <param name="objAdd"></param>
        /// <returns></returns>
        [Authorize(Roles = "FE1B570B-22F1-42E8-847E-A177B931BC57")]
        [HttpPost]
        public ResponeResult Insert(StoreAdd objAdd)
        {
            var response = new ResponeResult(ConstUtil.Error, "Có lỗi xảy ra!", null);
            try
            {
                var data = _StoreDal.Insert(objAdd);
                if (data == 1)
                {
                    response.Status = ConstUtil.Success;
                    response.Message = "Thành công !";
                    return response;
                }
                if (data == 0)
                {
                    response.Status = ConstUtil.Incompetent;
                    response.Message = "Bạn không có quyền!";
                    return response;
                }
                response.Status = ConstUtil.Error;
                response.Message = "Có lỗi sảy ra !";
                return response;
            }
            catch (Exception ex)
            {
                _logger.Error(ex.Message);
                response.Status = ConstUtil.Error;
                response.Message = ex.ToString();
                return response;
            }
        }

        /// <summary>
        /// Deleted by store
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        [Authorize(Roles = "FE1B570B-22F1-42E8-847E-A177B931BC57")]
        [HttpPost]
        public ResponeResult Delete(StoreDeleted obj)
        {
            var response = new ResponeResult(ConstUtil.Error, "Có lỗi xảy ra!", null);
            try
            {
                var data = _StoreDal.Delete(obj);
                if (data == 1)
                {
                    response.Status = ConstUtil.Success;
                    response.Message = "Thành công !";
                    return response;
                }
                if (data == 0)
                {
                    response.Status = ConstUtil.Incompetent;
                    response.Message = "Bạn không có quyền!";
                    return response;
                }
                response.Status = ConstUtil.Error;
                response.Message = "Có lỗi sảy ra !";
                return response;
            }
            catch (Exception ex)
            {
                _logger.Error(ex.Message);
                response.Status = ConstUtil.Error;
                response.Message = ex.ToString();
                return response;
            }
        }

        /// <summary>
        /// Lock or unlock store
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        [Authorize(Roles = "FE1B570B-22F1-42E8-847E-A177B931BC57")]
        [HttpPost]
        public ResponeResult Lock(StoreLock obj)
        {
            var response = new ResponeResult(ConstUtil.Error, "Có lỗi xảy ra!", null);
            try
            {
                var data = _StoreDal.IsLock(obj);
                if (data == 1)
                {
                    response.Status = ConstUtil.Success;
                    response.Message = "Thành công !";
                    return response;
                }
                if (data == 0)
                {
                    response.Status = ConstUtil.Incompetent;
                    response.Message = "Bạn không có quyền!";
                    return response;
                }
                response.Status = ConstUtil.Error;
                response.Message = "Có lỗi sảy ra !";
                return response;
            }
            catch (Exception ex)
            {
                _logger.Error(ex.Message);
                response.Status = ConstUtil.Error;
                response.Message = ex.ToString();
                return response;
            }
        }

        #endregion


        #region Not Authorized

        /// <summary>
        /// select list store by userd id
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpGet]
        public ResponeResult SelectByUserId(int id)
        {
            var response = new ResponeResult(ConstUtil.Error, "Có lỗi xảy ra!", null);
            try
            {
                var data = _StoreDal.SelectByUserId(id);
                if (data != null)
                {
                    response.Status = ConstUtil.Success;
                    response.Message = "Thành công !";
                    response.Data = data;
                    return response;
                }
                response.Status = ConstUtil.Error;
                response.Message = "Có lỗi sảy ra !";
                return response;
            }
            catch (Exception ex)
            {
                _logger.Error(ex.Message);
                response.Status = ConstUtil.Error;
                response.Message = ex.ToString();
                return response;
            }
        }

        /// <summary>
        ///  Thông tin cửa hàng
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpGet]
        public ResponeResult FeGetStore(int id)
        {
            var response = new ResponeResult(ConstUtil.Error, "Có lỗi xảy ra!", null);
            try
            {
                var data = _StoreDal.FeGetStore(id);
                if (data != null)
                {
                    response.Status = ConstUtil.Success;
                    response.Message = "Thành công !";
                    response.Data = data;
                    return response;
                }
                response.Status = ConstUtil.Error;
                response.Message = "Có lỗi sảy ra !";
                return response;
            }
            catch (Exception ex)
            {
                _logger.Error(ex.Message);
                response.Status = ConstUtil.Error;
                response.Message = ex.ToString();
                return response;
            }
        }
        #endregion
    }
}